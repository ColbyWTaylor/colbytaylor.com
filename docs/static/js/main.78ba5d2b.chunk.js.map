{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Routes","path","About","Users","Home","Nav","useState","loggedInStatus","setLoggedInStatus","to","onClick","className","Login","Register","Header","props","siteName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAIA,SAASA,IACP,OACE,mCAGE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,SAAZ,SACE,cAACE,EAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAACG,EAAD,WAOV,SAASC,IAAO,IAAD,EAC+BC,oBAAS,GADxC,mBACNC,EADM,KACUC,EADV,KAEb,OACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,sBAEAF,GACA,6BACE,cAAC,IAAD,CAAME,GAAG,SAAT,sBAIJ,wBAAQC,QAAS,kBAAMF,GAAmBD,IAA1C,yBAoBR,SAASH,IACP,OACE,qCACE,8CACA,kDACA,qIAQN,SAASF,IACP,OACE,sBAAKS,UAAU,OAAf,UACE,0CACA,oQAUN,SAASR,IACP,OAAO,uCAGT,IAAMS,EAAQ,WACZ,OACE,mCACE,0CAKAC,EAAW,WACf,OACE,mCACE,6CAKAC,EAAS,SAACC,GACd,OACE,mCACE,cAAC,IAAD,CAAMN,GAAG,IAAIE,UAAU,OAAvB,SACE,6BAAKI,EAAMC,gBAMJC,EArEf,WACE,OACE,cAAC,IAAD,UACE,sBAAKN,UAAU,UAAf,UACE,cAAC,EAAD,CAAQK,SAAS,iBACjB,cAACX,EAAD,IACA,cAACL,EAAD,UCjDOkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78ba5d2b.chunk.js","sourcesContent":["import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nfunction Routes() {\n  return (\n    <>\n      {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/users\">\n          <Users />\n        </Route>\n        <Route path=\"/Register\">\n          <Register />\n        </Route>\n        <Route path=\"/Login\">\n          <Login />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nfunction Nav() {\n  const [loggedInStatus, setLoggedInStatus] = useState(false);\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n        <li>\n          <Link to=\"/users\">Users</Link>\n        </li>\n        {!loggedInStatus && (\n          <li>\n            <Link to=\"/users\">Log In</Link>\n          </li>\n        )}\n\n        <button onClick={() => setLoggedInStatus(!loggedInStatus)}>\n          Log In\n        </button>\n      </ul>\n    </nav>\n  );\n}\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"content\">\n        <Header siteName=\"Colby Taylor\" />\n        <Nav />\n        <Routes />\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return (\n    <>\n      <h2>You are home</h2>\n      <p>You are logged in</p>\n      <p>\n        This will be a location to display various cards showcasing latest\n        blogs, services, and projects.\n      </p>\n    </>\n  );\n}\n\nfunction About() {\n  return (\n    <div className=\"home\">\n      <h2>App Home</h2>\n      <p>\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Voluptatem eos\n        beatae exercitationem omnis ipsa earum optio eum perferendis veniam\n        sunt? Ut dolorum commodi reiciendis modi, laborum officia incidunt\n        tenetur maiores?\n      </p>\n    </div>\n  );\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n\nconst Login = () => {\n  return (\n    <>\n      <h1>Login</h1>\n    </>\n  );\n};\n\nconst Register = () => {\n  return (\n    <>\n      <h1>Register</h1>\n    </>\n  );\n};\n\nconst Header = (props) => {\n  return (\n    <>\n      <Link to=\"/\" className=\"logo\">\n        <h1>{props.siteName}</h1>\n      </Link>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}